@model BibliotekaOnline.Models.GoogleBooks.GoogleBookApiResponse

@{
    ViewData["Title"] = "Wyszukaj ksiƒÖ≈ºki w Google Books";
}

<div class="modern-header">
    <h2>üîç Wyszukaj ksiƒÖ≈ºki</h2>
    <p>Znajd≈∫ i dodaj nowe ksiƒÖ≈ºki do biblioteki z ogromnej bazy Google Books</p>
</div>

<div class="modern-card">
    <div class="google-books-container">
        <h4 class="section-title text-center">
            üîé Wyszukaj ksiƒÖ≈ºki
        </h4>
        
        <form method="get" action="@Url.Action("GoogleBooksSearch")" class="mb-4">
            <div class="row">
                <div class="col-md-9">
                    <input type="text" name="query" class="google-search-input" placeholder="Wyszukaj po tytule, autorze lub ISBN..." value="@ViewBag.Query" required />
                </div>
                <div class="col-md-3">
                    <button type="submit" class="google-search-btn w-100">
                        Szukaj
                    </button>
                </div>
            </div>
        </form>
        
        <div class="info-box mt-3">
            <h6>üí° Wskaz√≥wki wyszukiwania:</h6>
            <div class="row">
                <div class="col-md-4">
                    <div class="d-flex align-items-center mb-2">
                        <span class="me-2">üìñ</span>
                        <span>Tytu≈Ç ksiƒÖ≈ºki</span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="d-flex align-items-center mb-2">
                        <span class="me-2">‚úçÔ∏è</span>
                        <span>Nazwisko autora</span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="d-flex align-items-center mb-2">
                        <span class="me-2">üî¢</span>
                        <span>Numer ISBN</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model?.Items != null && Model.Items.Any())
{
    <div class="modern-card">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h4 class="section-title">
                üìö Wyniki wyszukiwania
            </h4>
            <span class="modern-btn modern-btn-small modern-btn-outline">
                Znaleziono: @Model.TotalItems
            </span>
        </div>
        
        <div class="row">
            @foreach (var book in Model.Items)
            {
                <div class="col-lg-6 mb-4">
                    <div class="modern-card modern-card-small hover-glow">
                        <div class="row g-0">
                            <div class="col-md-4 text-center">
                                @if (!string.IsNullOrEmpty(book.VolumeInfo.ImageLinks?.Thumbnail))
                                {
                                    <img src="@book.VolumeInfo.ImageLinks.Thumbnail" class="img-fluid rounded shadow-sm" alt="@book.VolumeInfo.Title" style="max-height: 180px; max-width: 120px;">
                                }
                                else
                                {
                                    <div class="d-flex align-items-center justify-content-center rounded shadow-sm" style="height: 180px; width: 120px; background: linear-gradient(45deg, var(--light-blue), var(--primary-blue)); color: white; margin: 0 auto;">
                                        <span style="font-size: 2rem;">üìñ</span>
                                    </div>
                                }
                            </div>
                            <div class="col-md-8">
                                <div class="ps-3">
                                    <h6 class="mb-2" style="color: var(--primary-blue); font-weight: 600;">
                                        @book.VolumeInfo.Title
                                    </h6>
                                    
                                    <div class="mb-2">
                                        <small><strong>‚úçÔ∏è Autor:</strong></small><br>
                                        <span class="text-muted">@(string.Join(", ", book.VolumeInfo.Authors ?? new List<string>()))</span>
                                    </div>
                                    
                                    @if (!string.IsNullOrEmpty(book.VolumeInfo.Publisher))
                                    {
                                        <div class="mb-2">
                                            <small><strong>üè¢ Wydawca:</strong></small><br>
                                            <span class="text-muted">@book.VolumeInfo.Publisher</span>
                                        </div>
                                    }
                                    
                                    @if (!string.IsNullOrEmpty(book.VolumeInfo.PublishedDate))
                                    {
                                        <div class="mb-2">
                                            <small><strong>üìÖ Data publikacji:</strong></small><br>
                                            <span class="text-muted">@book.VolumeInfo.PublishedDate</span>
                                        </div>
                                    }
                                    
                                    @if (book.VolumeInfo.IndustryIdentifiers != null && book.VolumeInfo.IndustryIdentifiers.Any())
                                    {
                                        <div class="mb-3">
                                            <small><strong>üî¢ ISBN:</strong></small><br>
                                            <span class="text-muted">@book.VolumeInfo.IndustryIdentifiers.FirstOrDefault()?.Identifier</span>
                                        </div>
                                    }
                                    
                                    <div class="d-flex gap-2 flex-wrap">
                                        <a href="@Url.Action("ImportFromGoogleBooks", new { id = book.Id })" class="modern-btn modern-btn-small modern-btn-success">
                                            ‚ûï Importuj
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        
        @if (!string.IsNullOrEmpty(ViewBag.Query))
        {
            <div class="text-center mt-4">
                <div class="d-flex justify-content-center gap-2">
                    @if (ViewBag.StartIndex > 0)
                    {
                        <a href="@Url.Action("GoogleBooksSearch", new { query = ViewBag.Query, startIndex = Math.Max(0, ViewBag.StartIndex - 10) })" class="modern-btn modern-btn-outline">
                            ‚Üê Poprzednie
                        </a>
                    }
                    
                    @if (Model.Items.Count >= 10)
                    {
                        <a href="@Url.Action("GoogleBooksSearch", new { query = ViewBag.Query, startIndex = ViewBag.StartIndex + 10 })" class="modern-btn">
                            üìö Wiƒôcej wynik√≥w ‚Üí
                        </a>
                    }
                </div>
            </div>
        }
        
        <div class="text-center mt-4">
            <div class="info-box">
                <h6>üìã Instrukcje:</h6>
                <p class="mb-0">Kliknij <strong>"Importuj"</strong> aby dodaƒá ksiƒÖ≈ºkƒô do biblioteki</p>
            </div>
        </div>
    </div>
}
else if (!string.IsNullOrEmpty(ViewBag.Query))
{
    <div class="modern-card">
        <div class="warning-box text-center">
            <h5>üì≠ Brak wynik√≥w</h5>
            <p class="mb-3">Nie znaleziono ksiƒÖ≈ºek odpowiadajƒÖcych Twoim kryteriom wyszukiwania.</p>
            <div class="d-flex align-items-center justify-content-center">
                <span class="me-2">üí°</span>
                <small>Spr√≥buj u≈ºyƒá innych s≈Ç√≥w kluczowych lub sprawd≈∫ pisowniƒô</small>
            </div>
        </div>
    </div>
} 