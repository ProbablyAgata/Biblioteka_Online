@model IEnumerable<BibliotekaOnline.Models.Borrowing>
@{
    ViewData["Title"] = "Archiwum wypo≈ºycze≈Ñ";
}

<div class="modern-header">
    <h2>üìã Archiwum wypo≈ºycze≈Ñ</h2>
    <p>Historia wszystkich Twoich zwr√≥conych ksiƒÖ≈ºek</p>
</div>

@if (TempData["Success"] != null)
{
    <div class="modern-alert modern-alert-success">
        ‚úÖ @TempData["Success"]
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="modern-alert modern-alert-danger">
        ‚ùå @TempData["Error"]
    </div>
}

<div class="modern-card">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="section-title">
            üìö Zwr√≥cone ksiƒÖ≈ºki
        </h4>
        <a asp-action="Index" class="modern-btn modern-btn-outline modern-btn-small">
            ‚Üê Powr√≥t do aktywnych
        </a>
    </div>
    
    @if (Model.Any())
    {
        <div class="table-responsive">
            <table class="modern-table">
                <thead>
                    <tr>
                        <th>üìñ KsiƒÖ≈ºka</th>
                        <th>üìÖ Data wypo≈ºyczenia</th>
                        <th>üìÖ Data zwrotu</th>
                        <th>‚è∞ Czas wypo≈ºyczenia</th>
                        <th>üìä Status</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var borrowing in Model)
                {
                    <tr>
                        <td>
                            <div class="d-flex align-items-center">
                                @if (!string.IsNullOrEmpty(borrowing.Book?.ThumbnailUrl))
                                {
                                    <img src="@borrowing.Book.ThumbnailUrl" alt="@borrowing.Book.Title" class="me-3 rounded" style="height: 50px; width: auto; box-shadow: 0 2px 8px rgba(0,0,0,0.1);">
                                }
                                else
                                {
                                    <div class="me-3 d-flex align-items-center justify-content-center rounded" style="height: 50px; width: 40px; background: linear-gradient(45deg, var(--primary-blue), var(--secondary-blue)); color: white; font-size: 1.2rem;">
                                        üìñ
                                    </div>
                                }
                                <div>
                                    <strong>@borrowing.Book?.Title</strong>
                                    <br>
                                    <small class="text-muted">@borrowing.Book?.Author</small>
                                </div>
                            </div>
                        </td>
                        <td>@borrowing.BorrowDate.ToString("dd.MM.yyyy")</td>
                        <td>@borrowing.ReturnDate?.ToString("dd.MM.yyyy")</td>
                        <td>
                            @if (borrowing.ReturnDate.HasValue)
                            {
                                var days = (borrowing.ReturnDate.Value - borrowing.BorrowDate).Days;
                                <span>@days dni</span>
                                @if (borrowing.ReturnDate > borrowing.DueDate && borrowing.DueDate > borrowing.BorrowDate)
                                {
                                    var delayDays = (borrowing.ReturnDate.Value - borrowing.DueDate).Days;
                                    @if (delayDays > 0 && delayDays < 1000) 
                                    {
                                        <br><small class="text-warning">‚ö†Ô∏è Op√≥≈∫nienie: @delayDays dni</small>
                                    }
                                }
                            }
                        </td>
                        <td>
                            <span class="modern-btn modern-btn-small modern-btn-success">
                                ‚úÖ Zwr√≥cona
                            </span>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
        
        <div class="text-center mt-4">
            <div class="info-box">
                <h6>üìä Statystyki:</h6>
                <div class="row">
                    <div class="col-md-4">
                        <strong>≈ÅƒÖcznie wypo≈ºycze≈Ñ:</strong> @Model.Count()
                    </div>
                    <div class="col-md-4">
                        <strong>Z op√≥≈∫nieniem:</strong> @Model.Count(b => b.ReturnDate.HasValue && b.ReturnDate > b.DueDate && b.DueDate > b.BorrowDate && (b.ReturnDate.Value - b.DueDate).Days > 0 && (b.ReturnDate.Value - b.DueDate).Days < 1000)
                    </div>
                    <div class="col-md-4">
                        <strong>Na czas:</strong> @Model.Count(b => b.ReturnDate.HasValue && b.ReturnDate <= b.DueDate && b.DueDate > b.BorrowDate)
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="info-box text-center">
            <h5>üì≠ Brak historii</h5>
            <p>Nie masz jeszcze ≈ºadnych zwr√≥conych ksiƒÖ≈ºek w archiwum.</p>
            <a asp-action="Index" class="modern-btn">
                üìö Zobacz aktywne wypo≈ºyczenia
            </a>
        </div>
    }
</div>

<div class="modern-card">
    <div class="success-box">
        <h6>üí° Informacje:</h6>
        <ul class="mb-0">
            <li>Tu znajdziesz historiƒô wszystkich swoich zwr√≥conych ksiƒÖ≈ºek</li>
            <li>KsiƒÖ≈ºki z op√≥≈∫nieniem sƒÖ oznaczone ostrze≈ºeniem</li>
            <li>Statystyki pomagajƒÖ ≈õledziƒá swoje nawyki czytelnicze</li>
        </ul>
    </div>
</div>
